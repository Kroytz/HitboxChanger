name: CI_test

on: [push, pull_request, workflow_dispatch]

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest]
        sourcemod-version: [1.11-dev] # (1.11)
        metamod-version: [master] # (1.11)
        sdks: [csgo, css, l4d2]

    steps:
      - name: Install Linux packages
        if: runner.os == 'Linux'
        run: |
          sudo apt update
          sudo apt install -yq --no-install-recommends g++-multilib
      - name: Set up Python
        uses: actions/setup-python@v2

      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: extension
          
      - name: Checkout Metamod
        uses: actions/checkout@v2
        with:
          repository: alliedmodders/metamod-source
          ref: ${{ matrix.metamod-version }}
          path: 'metamod-source'

      - name: Checkout SourceMod
        uses: actions/checkout@v2
        with:
          repository: alliedmodders/sourcemod
          ref: ${{ matrix.sourcemod-version }}
          path: sourcemod
          submodules: recursive
          
      - name: Checkout SDKs
        uses: actions/checkout@v2
        with:
          repository: alliedmodders/hl2sdk
          ref: ${{ matrix.sdks }}
          path: hl2sdk-${{ matrix.sdks }}

      - name: Checkout AMBuild
        uses: actions/checkout@v2
        with:
          repository: alliedmodders/ambuild
          path: ambuild

      - name: Install AMBuild
        uses: BSFishy/pip-action@v1
        with:
          packages: ./ambuild
          
      - name: Build
        working-directory: extension
        shell: bash
        run: |
          mkdir build && cd build
          python ../configure.py --sdks ${{ matrix.sdks }} --enable-optimize
          ambuild
          
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ runner.os }}
          path: extension/build/package
